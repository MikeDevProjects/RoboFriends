{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/CounterButton.js","components/Header.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","components_Card","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasError","info","setState","Component","CounterButton","updateCount","count","color","onClick","PureComponent","Header","components_CounterButton","App","componentDidMount","onRequestRobots","_this$props","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","response","json","data","initialState","initialStateRobots","rootReducer","createLogger","combineReducers","arguments","length","undefined","action","assign","immutableUpdate","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fa71ddb7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  // const {name, email } = props;\r\n  return (\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}r2d2?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardsArray = robots.map(user => {\r\n    console.log('CardList');\r\n    return (\r\n      <Card\r\n        key={user.id}\r\n        id={user.id}\r\n        name={user.name}\r\n        email={user.email}\r\n        />\r\n    );\r\n  });\r\n  return cardsArray;\r\n};\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n  console.log('SearchBox');\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n      <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n          {props.children}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState((state, props) => { return { hasError: true }});\r\n  }\r\n\r\n  render() {\r\n    return this.state.hasError ?\r\n       <h1>Oooops. That is not good.</h1> :\r\n       this.props.children;\r\n\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { PureComponent } from 'react'\r\n\r\nclass CounterButton extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 0\r\n    }\r\n  }\r\n\r\n  updateCount = () => {\r\n    this.setState(state => ({count: state.count + 1 }));\r\n  }\r\n\r\n  render() {\r\n    console.log(\"CounterButton\")\r\n    return (\r\n      <button color={this.props.color} onClick={this.updateCount}>\r\n        Count: {this.state.count}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CounterButton;","import React, { PureComponent } from 'react'\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends PureComponent {\r\n\r\n  render() {\r\n    console.log('Header');\r\n    return (\r\n      <div>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <CounterButton color={'red'} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport \"./App.css\";\r\n\r\nimport { setSearchField, requestRobots } from \"../actions\";\r\nimport Header from \"../components/Header\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.onRequestRobots();\r\n  };\r\n\r\n  render() {\r\n    const { searchField, onSearchChange, robots, isPending, error } = this.props;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n    return isPending ? (\r\n      <h1>Loading</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <Header />\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nexport const setSearchField = text => ({\r\n  type: CHANGE_SEARCHFIELD,\r\n  payload: text\r\n});\r\n\r\nexport const requestRobots = () => dispatch => {\r\n  dispatch({type: REQUEST_ROBOTS_PENDING})\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => response.json())\r\n      .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data}))\r\n      .catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\r\n}","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import immutableUpdate from 'immutable-update';\r\nimport {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\n\r\nconst initialState = {\r\n  searchField: \"\"\r\n};\r\n\r\n\r\nexport const searchRobots = (state=initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCHFIELD:\r\n      return Object.assign({}, state, { searchField: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateRobots = {\r\n  isPending: false,\r\n  robots: [],\r\n  error: ''\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n  switch(action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return immutableUpdate(\r\n        state,\r\n        {\r\n          isPending: true\r\n        });\r\n\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return immutableUpdate(\r\n        state,\r\n        {\r\n          robots: action.payload,\r\n          isPending: false\r\n        });\r\n\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return immutableUpdate(\r\n        state,\r\n        {\r\n          error: action.payload,\r\n          isPending: false\r\n        });\r\n\r\n    default :\r\n        return state\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport { searchRobots, requestRobots } from \"./reducers\";\n\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({searchRobots, requestRobots});\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.register();\n\n"],"sourceRoot":""}